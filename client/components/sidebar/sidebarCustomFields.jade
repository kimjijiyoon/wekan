template(name="customFieldsSidebar")
    ul.sidebar-list
        each customFields
            li
                div.minicard-wrapper.js-minicard
                    div.minicard
                        a.fa.fa-pencil.js-edit-custom-field.minicard-edit-button
                        div.minicard-title
                          +viewer
                            =name
                          | ({{ type }})

    if currentUser.isBoardMember
        hr
        a.sidebar-btn.js-open-create-custom-field
            i.fa.fa-plus
            span {{_ 'createCustomField'}}

template(name="createCustomFieldPopup")
    form
        label
            | {{_ 'name'}}
            unless _id
                input.js-field-name(type="text" autofocus placeholder="{{placeholderForName}}")
            else
                input.js-field-name(type="text" value=name)

        label
            | {{_ 'type'}}
            select.js-field-type(disabled="{{#if _id}}disabled{{/if}}")
                each types
                    if selected
                        option(value=value selected="selected") {{name}}
                    else
                        option(value=value) {{name}}

        // API Dropdown 설정 추가 --지윤 추가
        div.js-field-settings.js-field-settings-apidropdown(class="{{#if isTypeNotSelected 'apiDropdown'}}hide{{/if}}")
            label
                | API URL
            input.js-field-api-url(type="text" value=getApiUrl placeholder="https://api.example.com/data")

            label
            | API Method
            select.js-field-api-method
                each getApiMethods
                    if selected
                        option(value=value selected="selected") {{name}}
                    else
                        option(value=value) {{name}}

            //- label
            //-     | Maximum Depth (1-3)
            //- select.js-field-max-depth
            //-     each getDepthLevels
            //-         if selected
            //-             option(value=value selected="selected") {{name}}
            //-         else
            //-             option(value=value) {{name}}

            // Depth Separator 입력란 숨김 처리 (트리형 API만 쓸 경우)
            // label
            //     | Depth Separator
            // input.js-field-depth-separator(type="text" value=getDepthSeparator placeholder="/")

        div.js-field-settings.js-field-settings-currency(class="{{#if isTypeNotSelected 'currency'}}hide{{/if}}")
            label
                | {{_ 'custom-field-currency-option'}}
            select.js-field-currency
              each getCurrencyCodes
                if selected
                  option(value=value selected="selected") {{name}}
                else
                  option(value=value) {{name}}
            a.flex.js-field-show-sum-at-top-of-list(class="{{#if showSumAtTopOfList}}is-checked{{/if}}")
                .materialCheckBox(class="{{#if showSumAtTopOfList}}is-checked{{/if}}")
                span {{_ 'showSum-field-on-list'}}

        div.js-field-settings.js-field-settings-currency(class="{{#if isTypeNotSelected 'number'}}hide{{/if}}")
            a.flex.js-field-show-sum-at-top-of-list(class="{{#if showSumAtTopOfList}}is-checked{{/if}}")
                .materialCheckBox(class="{{#if showSumAtTopOfList}}is-checked{{/if}}")
                span {{_ 'showSum-field-on-list'}}

        div.js-field-settings.js-field-settings-dropdown(class="{{#if isTypeNotSelected 'dropdown'}}hide{{/if}}")
            label
                | {{_ 'custom-field-dropdown-options'}}
            each dropdownItems.get
                input.js-dropdown-item(type="text" value=name placeholder="")
            input.js-dropdown-item.last(type="text" value="" placeholder="{{_ 'custom-field-dropdown-options-placeholder'}}")

        div.js-field-settings.js-field-settings-stringtemplate(class="{{#if isTypeNotSelected 'stringtemplate'}}hide{{/if}}")
            label
                | {{_ 'custom-field-stringtemplate-format'}}
            input.js-field-stringtemplate-format(type="text" value=getStringtemplateFormat)
            label
                | {{_ 'custom-field-stringtemplate-separator'}}
            input.js-field-stringtemplate-separator(type="text" value=getStringtemplateSeparator)

        a.flex.js-field-show-on-card(class="{{#if showOnCard}}is-checked{{/if}}")
            .materialCheckBox(class="{{#if showOnCard}}is-checked{{/if}}")

            span {{_ 'show-field-on-card'}}
        a.flex.js-field-automatically-on-card(class="{{#if automaticallyOnCard}}is-checked{{/if}}")
            .materialCheckBox(class="{{#if automaticallyOnCard}}is-checked{{/if}}")

            span {{_ 'automatically-field-on-card'}}

        a.flex.js-field-always-on-card(class="{{#if alwaysOnCard}}is-checked{{/if}}")
            .materialCheckBox(class="{{#if alwaysOnCard}}is-checked{{/if}}")
            span {{_ 'always-field-on-card'}}

        a.flex.js-field-showLabel-on-card(class="{{#if showLabelOnMiniCard}}is-checked{{/if}}")
            .materialCheckBox(class="{{#if showLabelOnMiniCard}}is-checked{{/if}}")

            span {{_ 'showLabel-field-on-card'}}

        button.primary.wide.left(type="submit")
            | {{_ 'save'}}
        if _id
            button.negate.wide.right.js-delete-custom-field(type="button")
                | {{_ 'delete'}}

template(name="deleteCustomFieldPopup")
    p {{_ "custom-field-delete-pop"}}
    button.js-confirm.negate.full(type="submit") {{_ 'delete'}}
